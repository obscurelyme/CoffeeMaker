version: 2.1

orbs:
  win: circleci/windows@2.4.0

jobs:
  linux-build:
    docker:
      - image: obscurelyme/coffeemaker:latest
        auth:
          username: obscurelyme
          password: $DOCKERHUB_PASSWORD
    steps:
      - checkout

      - run: bash ./scripts/configure.sh
      - run: bash ./scripts/build.sh
      - run: mkdir release
      - run: cp ./build/main ./release/ultra-cosmo-invaders
      - run: tar vcfz /tmp/ultra-cosmo-invaders.tar.gz ./release

      - store_artifacts:
          path: /tmp/ultra-cosmo-invaders.tar.gz

  windows-build:
    executor:
      name: win/default
      shell: powershell.exe
    steps:
      - run:
          name: Install Cmake
          command: |
            choco install cmake -y
            $env:Path+=";$Env:ProgramFiles\CMake\bin"
            cmake --version
      - run:
          name: Install vcpkg
          command: |
            $env:Path+=";$Env:ProgramFiles\CMake\bin"
            git clone https://github.com/Microsoft/vcpkg.git ../vcpkg
            ..\vcpkg\bootstrap-vcpkg.bat
            ..\vcpkg\vcpkg.exe integrate install
      - checkout
      - restore_cache:
          keys:
            - vcpkg-cache-{{ checksum "vcpkg.json" }}
      - run:
          name: Cmake Configure
          command: |
            $env:Path+=";$Env:ProgramFiles\CMake\bin"
            ./scripts/configure.bat
      - save_cache:
          key: vcpkg-cache-{{ checksum "vcpkg.json" }}
          paths:
            - C:\Users\circleci\AppData\Local\vcpkg
            - vcpkg_installed
      - run:
          name: Cmake Build
          command: |
            $env:Path+=";$Env:ProgramFiles\CMake\bin"
            ./scripts/build.bat
            ./scripts/build.bat
      - run:
          name: Zipping Build
          command: |
            mkdir release
            robocopy build/Debug release /E
            ./scripts/zip.bat

      - store_artifacts:
          path: ./win-release.zip

  deploy:
    machine:
      image: ubuntu-2004:202010-01

    steps:
      - run: echo "Hello, World!"

workflows:
  version: 2
  coffeemaker_ci:
    jobs:
      # - windows-build:
      #     filters:
      #       branches:
      #         only:
      #           - /feature\/.*/
      #           - /bugfix\/.*/
      #           - master
      - linux-build:
          filters:
            branches:
              only:
                - /feature\/.*/
                - /bugfix\/.*/
                - master
      - deploy:
          filters:
            branches:
              only:
                - master
          requires:
            - linux-build
