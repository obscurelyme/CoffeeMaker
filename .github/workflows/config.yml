name: coffeemaker-ci
on:
  pull_request:
    paths-ignore:
      - "docs/**"
      - "graphs/**"
      - "scripts/**"
    branches:
      - main
      - master
  push:
    paths-ignore:
      - "docs/**"
      - "graphs/**"
      - "scripts/**"
    branches:
      - main
      - master
      - "hotfix/**"
jobs:
  test-this:
    runs-on: ubuntu-latest
    steps:
      - name: Echo Github SHA
        run: |
          pwd
          echo "./folder/folder2/$GITHUB_SHA"

  # macos-build:
  #   timeout-minutes: 30
  #   runs-on: macos-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #     - uses: actions/cache@v2
  #       id: cache
  #       with:
  #         path: /Users/runner/.cache/vcpkg
  #         key: vcpkg-archives-${{ runner.os }}-${{ hashFiles('vcpkg.json') }}
  #     - name: Configure
  #       run: |
  #         brew install make
  #         brew install ninja
  #         brew install autoconf automake libtool yasm
  #         bash .github/scripts/osx/configure.sh
  #     - name: Build
  #       run: bash .github/scripts/osx/build.sh
  #     - name: Test
  #       run: |
  #         chmod +x ./build/CoffeeMakerUnitTests
  #         ./build/CoffeeMakerUnitTests
  #     - name: Package
  #       run: bash .github/scripts/osx/package.sh
  #     - name: Store Artifact
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: ultra-cosmo-invaders-osx
  #         path: ultra-cosmo-invaders-osx.tar.gz

  # windows-build:
  #   timeout-minutes: 30
  #   runs-on: windows-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #     - uses: actions/cache@v2
  #       id: cache
  #       with:
  #         path: C:\Users\runneradmin\AppData\Local\vcpkg
  #         key: vcpkg-archives-${{ runner.os }}-${{ hashFiles('vcpkg.json') }}
  #     - name: Configure
  #       run: .github/scripts/win/configure.bat
  #     - name: Build
  #       run: .github/scripts/win/build.bat
  #     - name: Test
  #       run: ./build/Debug/CoffeeMakerUnitTests.exe
  #     - name: Package
  #       run: .github/scripts/win/package.bat
  #     - name: Store Artifact
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: ultra-cosmo-invaders-win
  #         path: ultra-cosmo-invaders-win.zip

  # linux-build:
  #   timeout-minutes: 30
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #     - uses: actions/cache@v2
  #       id: cache
  #       with:
  #         path: /home/runner/.cache/vcpkg
  #         key: vcpkg-archives-${{ runner.os }}-${{ hashFiles('vcpkg.json') }}
  #     - name: Install Tools
  #       run: |
  #         sudo apt-get update
  #         sudo apt-get upgrade
  #         sudo apt-get install make
  #         sudo apt-get install yasm
  #         sudo apt install gcc-10 g++-10
  #     - name: Configure
  #       run: |
  #         bash .github/scripts/linux/configure.sh
  #       env:
  #         CC: gcc-10
  #         CXX: g++-10
  #     - name: Build
  #       run: |
  #         bash .github/scripts/linux/build.sh
  #       env:
  #         CC: gcc-10
  #         CXX: g++-10
  #     - name: Test
  #       run: |
  #         chmod +x ./build/CoffeeMakerUnitTests
  #         ./build/CoffeeMakerUnitTests
  #     - name: Package
  #       run: bash .github/scripts/linux/package.sh
  #     - name: Store Artifact
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: ultra-cosmo-invaders-linux
  #         path: ultra-cosmo-invaders-linux.tar.gz

  deploy:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    if: contains('refs/heads/master', github.ref)
    needs: [macos-build, windows-build, linux-build]

    steps:
      - name: Login to AWS
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.JEVES_AWS_ACCESS_TOKEN }}
          aws-secret-access-key: ${{ secrets.JEVES_AWS_ACCESS_SECRET }}
          aws-region: us-west-2

      - name: Download Win Artifacts
        uses: actions/download-artifact@v2
        with:
          name: ultra-cosmo-invaders-win
          path: ultra-cosmo-invaders-win.zip

      - name: Download OSX Artifacts
        uses: actions/download-artifact@v2
        with:
          name: ultra-cosmo-invaders-osx
          path: ultra-cosmo-invaders-osx.tar.gz

      - name: Download Linux Artifacts
        uses: actions/download-artifact@v2
        with:
          name: ultra-cosmo-invaders-linux
          path: ultra-cosmo-invaders-linux.tar.gz

      - name: Upload to AWS S3
        if: ${{ success() }}
        run: |
          aws s3 cp .\ultra-cosmo-invaders-win.zip "s3://ultra-cosmo-invaders/$GITHUB_SHA/ultra-cosmo-invaders.zip"
          aws s3 cp .\ultra-cosmo-invaders-osx.tar.gz "s3://ultra-cosmo-invaders/$GITHUB_SHA/ultra-cosmo-invaders-osx.tar.gz"
          aws s3 cp .\ultra-cosmo-invaders-linux.tar.gz "s3://ultra-cosmo-invaders/$GITHUB_SHA/ultra-cosmo-invaders-linux.tar.gz"
