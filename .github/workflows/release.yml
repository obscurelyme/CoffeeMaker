name: coffeemaker-release
on:
  push:
    tags:
      - "*"

jobs:
  macos-release-build:
    timeout-minutes: 30
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/cache@v2
        id: cache
        with:
          path: /Users/runner/.cache/vcpkg
          key: vcpkg-archives-${{ runner.os }}-${{ hashFiles('vcpkg.json') }}
      - name: Configure
        run: |
          brew install make
          brew install ninja
          brew install autoconf automake libtool yasm
          bash .github/scripts/osx/configure.sh
      - name: Build
        run: bash .github/scripts/osx/build.sh
      - name: Login to AWS
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.BUTLER_AWS_ACCESS_TOKEN }}
          aws-secret-access-key: ${{ secrets.BUTLER_AWS_SECRET_ACCESS_TOKEN }}
          aws-region: us-west-2
      - name: Downloading Licensed Assets
        run: |
          aws s3 sync s3://ultra-cosmo-invaders/licensed-assets/ ./licensed-assets
      - name: Package
        run: bash .github/scripts/osx/package.sh
      - name: Store Artifact
        uses: actions/upload-artifact@v2
        with:
          name: ultra-cosmo-invaders-osx
          path: ultra-cosmo-invaders-osx.tar.gz

  windows-release-build:
    timeout-minutes: 30
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/cache@v2
        id: cache
        with:
          path: C:\Users\runneradmin\AppData\Local\vcpkg
          key: vcpkg-archives-${{ runner.os }}-${{ hashFiles('vcpkg.json') }}
      - name: Configure
        run: .github/scripts/win/configure.bat
      - name: Build
        run: .github/scripts/win/build.bat
      - name: Login to AWS
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.BUTLER_AWS_ACCESS_TOKEN }}
          aws-secret-access-key: ${{ secrets.BUTLER_AWS_SECRET_ACCESS_TOKEN }}
          aws-region: us-west-2
      - name: Downloading Licensed Assets
        run: |
          aws s3 sync s3://ultra-cosmo-invaders/licensed-assets/ ./licensed-assets
      - name: Package
        run: .github/scripts/win/package.bat
      - name: Store Artifact
        uses: actions/upload-artifact@v2
        with:
          name: ultra-cosmo-invaders-win
          path: ultra-cosmo-invaders-win.zip

  linux-release-build:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/cache@v2
        id: cache
        with:
          path: /home/runner/.cache/vcpkg
          key: vcpkg-archives-${{ runner.os }}-${{ hashFiles('vcpkg.json') }}
      - name: Install Tools
        run: |
          sudo apt-get update
          sudo apt-get upgrade
          sudo apt install make yasm gcc-11 g++-11
          bash .github/scripts/linux/install-sdl-dependencies.sh
      - name: Configure
        run: bash .github/scripts/linux/configure.sh
      - name: Build
        run: |
          bash .github/scripts/linux/build.sh
      - name: Login to AWS
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.BUTLER_AWS_ACCESS_TOKEN }}
          aws-secret-access-key: ${{ secrets.BUTLER_AWS_SECRET_ACCESS_TOKEN }}
          aws-region: us-west-2
      - name: Downloading Licensed Assets
        run: |
          aws s3 sync s3://ultra-cosmo-invaders/licensed-assets/ ./licensed-assets
      - name: Package
        run: bash .github/scripts/linux/package.sh
      - name: Store Artifact
        uses: actions/upload-artifact@v2
        with:
          name: ultra-cosmo-invaders-linux
          path: ultra-cosmo-invaders-linux.tar.gz

  release:
    needs: [macos-release-build, windows-release-build, linux-release-build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Login to AWS
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.BUTLER_AWS_ACCESS_TOKEN }}
          aws-secret-access-key: ${{ secrets.BUTLER_AWS_SECRET_ACCESS_TOKEN }}
          aws-region: us-west-2

      - name: Download Win Artifacts
        uses: actions/download-artifact@v2
        with:
          name: ultra-cosmo-invaders-win

      - name: Download OSX Artifacts
        uses: actions/download-artifact@v2
        with:
          name: ultra-cosmo-invaders-osx

      - name: Download Linux Artifacts
        uses: actions/download-artifact@v2
        with:
          name: ultra-cosmo-invaders-linux

      - name: Upload to AWS S3
        if: ${{ success() }}
        run: |
          aws s3 cp ultra-cosmo-invaders-win.zip "s3://ultra-cosmo-invaders/$GITHUB_REF_NAME/ultra-cosmo-invaders.zip"
          aws s3 cp ultra-cosmo-invaders-osx.tar.gz "s3://ultra-cosmo-invaders/$GITHUB_REF_NAME/ultra-cosmo-invaders-osx.tar.gz"
          aws s3 cp ultra-cosmo-invaders-linux.tar.gz "s3://ultra-cosmo-invaders/$GITHUB_REF_NAME/ultra-cosmo-invaders-linux.tar.gz"

      - name: Release to Github
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ultra-cosmo-invaders-win.zip
            ultra-cosmo-invaders-osx.tar.gz
            ultra-cosmo-invaders-linux.tar.gz

      - name: Release to Itch.io
        env:
          BUTLER_API_KEY: ${{ secrets.BUTLER_API_KEY }}
        run: |
          tar -xf ultra-cosmo-invaders-linux.tar.gz
          mv ./release ./ultra-cosmo-invaders-linux
          tar -xf ultra-cosmo-invaders-osx.tar.gz
          mv ./release ./ultra-cosmo-invaders-osx
          bash .github/scripts/install-butler.sh
          ./butler push ultra-cosmo-invaders-win.zip ${{ secrets.ITCH_IO_GAME }}:windows --userversion="$GITHUB_REF_NAME"
          ./butler push ./ultra-cosmo-invaders-osx ${{ secrets.ITCH_IO_GAME }}:osx --userversion="$GITHUB_REF_NAME"
          ./butler push ./ultra-cosmo-invaders-linux ${{ secrets.ITCH_IO_GAME }}:linux --userversion="$GITHUB_REF_NAME"
